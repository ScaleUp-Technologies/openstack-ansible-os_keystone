---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: create the system group
  group:
    name: "{{ keystone_system_group_name }}"
    state: "present"
    system: "yes"
  delegate_to: "{{ item }}"
  with_items: "{{ ansible_play_hosts }}"
  when: "inventory_hostname == ansible_play_hosts[0]"

- name: create additional groups
  group:
    name: "{{ item[1] }}"
    state: "present"
    system: "yes"
  delegate_to: "{{ item[0] }}"
  with_nested:
    - "{{ ansible_play_hosts }}"
    - "{{ keystone_system_additional_groups }}"
  when: "inventory_hostname == ansible_play_hosts[0]"

- name: Remove old key file(s) if found
  file:
    path: "{{ item[1] }}"
    state: "absent"
  with_nested:
    - "{{ ansible_play_hosts }}"
    - - "{{ keystone_system_user_home }}/.ssh/authorized_keys"
      - "{{ keystone_system_user_home }}/.ssh/id_rsa"
      - "{{ keystone_system_user_home }}/.ssh/id_rsa.pub"
  when:
    - keystone_recreate_keys | bool
    - "inventory_hostname == ansible_play_hosts[0]"
  delegate_to: "{{ item[0] }}"

- name: Create the keystone system user
  user:
    name: "{{ keystone_system_user_name }}"
    group: "{{ keystone_system_group_name }}"
    groups: "{{ keystone_system_additional_groups | join(',') }}"
    comment: "{{ keystone_system_comment }}"
    shell: "{{ keystone_system_shell }}"
    system: "yes"
    createhome: "yes"
    home: "{{ keystone_system_user_home }}"
  delegate_to: "{{ item }}"
  with_items: "{{ ansible_play_hosts }}"
  when: "inventory_hostname == ansible_play_hosts[0]"

# NOTE(cloudnull): During an upgrade the local directory may exist on a source
#                  install. If the directory does exist it will need to be
#                  removed. This is required on source installs because the
#                  config directory is a link.
- name: Source config block
  block:
    - name: Stat config directory
      stat:
        path: "/etc/keystone"
      register: keystone_conf_dir_stat

    - name: Remove the config directory
      file:
        path: "/etc/keystone"
        state: absent
      when:
        - keystone_conf_dir_stat.stat.isdir is defined and
          keystone_conf_dir_stat.stat.isdir
  when:
    - keystone_install_method == 'source'

# The fernet key repository is needed on all hosts even if only running against
# one host, so the delegation preps the directories on all hosts at once.
- name: Create keystone dir
  file:
    path: "{{ item[1].path | default(omit) }}"
    src: "{{ item[1].src | default(omit) }}"
    dest: "{{ item[1].dest | default(omit) }}"
    state: "{{ item[1].state | default('directory') }}"
    owner: "{{ item[1].owner|default(keystone_system_user_name) }}"
    group: "{{ item[1].group|default(keystone_system_group_name) }}"
    mode: "{{ item[1].mode | default(omit) }}"
    force: "{{ item[1].force | default(omit) }}"
  with_nested:
    - "{{ ansible_play_hosts }}"
    - - path: "/openstack"
        mode: "0755"
        owner: "root"
        group: "root"
      - path: "{{ (keystone_install_method == 'distro') | ternary('/etc/keystone', (keystone_bin | dirname) + '/etc/keystone') }}"
        mode: "0755"
      # NOTE(cloudnull): The "src" path is relative. This ensures all files remain
      #                  within the host/container confines when connecting to
      #                  them using the connection plugin or the root filesystem.
      - dest: "/etc/keystone"
        src: "{{ keystone_bin | dirname | regex_replace('^/', '../') }}/etc/keystone"
        state: "{{ (keystone_install_method == 'source') | ternary('link', 'directory') }}"
        force: "{{ (keystone_install_method == 'source') | ternary(true, omit) }}"
      - path: "{{ keystone_credential_key_repository }}"
        mode: "0750"
      - path: "{{ keystone_ldap_domain_config_dir }}"
        mode: "0750"
      - path: "/etc/keystone/ssl"
      - path: "{{ keystone_fernet_tokens_key_repository }}"
        mode: "2750"
      - path: "{{ keystone_system_user_home }}"
      - path: "/var/www/cgi-bin"
        owner: root
        group: root
      - path: "/var/www/cgi-bin/keystone"
      - path: "/etc/ansible/facts.d"
        owner: root
        group: root
  delegate_to: "{{ item[0] }}"
  when: "inventory_hostname == ansible_play_hosts[0]"
